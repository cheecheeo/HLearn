# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - GHCVER=7.8.3 CABALVER=1.20 CABALFLAGS=''
 - GHCVER=head CABALVER=1.20 CABALFLAGS='' # see section about GHC HEAD snapshots

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER happy-1.19.4 alex-3.1.3 libblas-dev liblapack-dev libglpk-dev
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH

install:
 - cabal update
 - cabal sandbox init
 - mkdir -p dependencies
 - git clone https://github.com/mikeizbicki/subhask.git dependencies/subhask
 - pushd dependencies/subhask
 - git checkout $(git rev-list --all | head -1 | xargs git name-rev | awk '{print $2}')
 - popd
 - cabal sandbox add-source dependencies/subhask
 - cabal install -j1 $CABALFLAGS --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal configure $CABALFLAGS --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal-$CABALVER info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi

matrix:
  fast_finish: true
  allow_failures:
    - env: GHCVER=head CABALVER=1.20 CABALFLAGS='' # see section about GHC HEAD snapshots
